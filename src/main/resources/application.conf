akka {
  actor {
    provider = "cluster"
    serialization-bindings {
      "app.realworld.CborSerializable" = jackson-json
    }
  }
  persistence {
    journal {
      plugin = "jdbc-journal"
      // Enable the line below to automatically start the journal when the actorsystem is started
      auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      // Enable the line below to automatically start the snapshot-store when the actorsystem is started
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
    state {
      plugin = "jdbc-durable-state-store"
    }
  }
  remote {
    artery {
      canonical {
        hostname = "127.0.0.1"
        port = 2551
      }
    }
  }
  cluster {
    seed-nodes = [
      "akka://usersServer@127.0.0.1:2551"
    ]

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }
}

routes {
  ask-timeout = ${ROUTES_ASK_TIMEOUT_SECONDS} s
}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

# the akka-persistence-jdbc provider in use for durable state store
jdbc-durable-state-store {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = ${DB_HOST}
    port = ${DB_PORT}
    url = "jdbc:postgresql://"${slick.db.host}":"${slick.db.port}"/"${slick.db.name}"?reWriteBatchedInserts=true"
    user = ${DB_USER}
    password = ${DB_PASSWORD}
    name = ${DB_NAME}
    driver = "org.postgresql.Driver"
  }
}